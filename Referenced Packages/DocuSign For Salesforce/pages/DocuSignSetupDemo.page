<apex:page controller="dsfs.DocuSignSetupDemoController"
	action="{!initConfiguration}" tabstyle="DocuSign_Admin__tab">
		<apex:stylesheet value="{!URLFOR($Resource.dsfs__StandardSetupCss, 'standardSetup.css')}" /> 
	
	<style type="text/css">
		.progressStyle {
			width: 87%;
			cellspacing: 0;
			frame: void;
		}
		
		.divStyle {
			border: medium solid #00AEEF;
			background-color: white; 
			border-radius: 6px;
			min-width: 656px;
		}
		
		.createAccountDivStyle {
			border: solid #00AEEF 3px;
			background-color: white;
			border-radius: 6px;
			margin-left: 32px;
			width: 650px;
		}
	
		
		.headerTextStyle {
			color: #00AEEF;
			font: bold 14px arial;
		}
		
		.pgheaderTextStyle {
			color: #00AEEF;
			font: bold 18px arial;
		}
		
		.inputTextStyle {
			border-style: inset;
			border-width: thin;
			border-radius: 6px;
			width: 275px;
		}
		
		.selectStateStyle {
			border-style: inset;
			border-width: thin;
			border-radius: 6px;
		}
		
		.phoneExtensionStyle {
			border-style: inset;
			border-width: thin;
			border-radius: 6px;
			margin-left: 10px;
		}
		
		.sectionStyle {
			cellspacing: 4px;
		}
		
		.centeredOutputText {
			text-align: center;
			text-color: red;
		}
		
		.headerTableStyle {
			padding: 0px 0px 0px 0px;
		}
		
		.subHeaderTextStyle {
			padding: 10px 10px 5px 20px;
		}
		
		.offsetTableStyle {
			padding: 0px 0px 0px 40px;
			width: 646px;
		}
		
		.backNextTableStyle {
			padding: 0px 0px 0px 40px;
			width: 646px;
		}
		
		.addButtonsTableStyle {
			padding: 20px 0px 20px 0px;
			min-width: 656px;
		}
		
		.addButtonsCellStyle {
		
			text-align: center;
			padding: 0px 0px 10px 0px;
		}
		
		.backButtonStyle {
			width: 50%;
			text-align: right;
			padding: 0px 25px 0px 0px;
		}
		
		.nextButtonStyle {
			width: 50%;
			text-align: left;
			padding: 0px 0px 0px 25px;
		}
		
		.mainDocuSignButton {
			background: #fcb034;
			background: -moz-linear-gradient(top, #ffc423 25%, #fcb034 99%);
			background: -webkit-gradient(linear, left top, left bottom, color-stop(25%, #fcb034),
				color-stop(99%, #ffc423) );
			background: -webkit-linear-gradient(top, #ffc423 25%, #fcb034 99%);
			background: -o-linear-gradient(top, #ffc423 25%, #fcb034 99%);
			background: -ms-linear-gradient(top, #ffc423 25%, #fcb034 99%);
			background: linear-gradient(top, #ffc423 25%, #fcb034 99%);
			filter: progid : DXImageTransform.Microsoft.gradient (   startColorstr =
				'#ffc423', endColorstr = '#fcb034', GradientType = 0 );
			border: none;
			cursor: pointer;
			-webkit-border-radius: 6px;
			-moz-border-radius: 6px;
			border-radius: 6px;
			padding: 5px 20px;
			color: #303030;
			font-family: AvenirMedium, Verdana, Tahoma, "DejaVu Sans", sans-serif;
			font-size: 0.85em;
			font-weight: bold;
			text-decoration: none;
			-webkit-box-shadow: inset 0px 1px 1px #c08628;
			-moz-box-shadow: inset 0px 1px 1px #c08628;
			box-shadow: inset 0px 1px 1px #c08628;
		}
		
		.mainDocuSignButton:hover {
			-webkit-box-shadow: 1px 0px 1px 0px #562502;
			-moz-box-shadow: 1px 0px 1px 0px #562502;
			box-shadow: 1px 0px 1px 0px #562502;
			text-decoration: none;
		}
		
		.mainDocuSignButton:active {
			background: #fcb034;
			background: -moz-linear-gradient(top, #fdbd0e 25%, #f9a927 99%);
			background: -webkit-gradient(linear, left top, left bottom, color-stop(25%, #fdbd0e),
				color-stop(99%, #f9a927) );
			background: -webkit-linear-gradient(top, #fdbd0e 25%, #f9a927 99%);
			background: -o-linear-gradient(top, #fdbd0e 25%, #f9a927 99%);
			background: -ms-linear-gradient(top, #fdbd0e 25%, #f9a927 99%);
			background: linear-gradient(top, #fdbd0e 25%, #f9a927 99%);
			filter: progid : DXImageTransform.Microsoft.gradient (   startColorstr =
				'#fdbd0e', endColorstr = '#f9a927', GradientType = 0 );
			-moz-box-shadow: none;
			box-shadow: none;
			text-decoration: none;
		}
	</style>

	<script>
	function OpenURL(name, url, style)
	{
	    url = unescape(url);
	    window.open(url, name, style);
	}

</script>
	<style>
		.ds_button_wrapper {
			padding: 10px;
			layout: block;
			text-align: left;
		}
		
		.ds_setuptext {
			padding: 10px;
			text-align: left;
		}
	</style>
	<apex:form >
		<input type="hidden" id="hdnIpRangeUrl" name="hdnIpRangeUrl"
			value="{!SetupIpRangeUrl}" />
		<script>
function SetTrustedNetwork()
{
    var url = document.getElementById("hdnIpRangeUrl").value;
    url = unescape(url);
    window.open(url, "SFNetworkAddress", "height=600, width=950,scrollbars=1,resizable=1");
}
</script>
		<apex:pageMessages />
		<!-- START MESSAGE -->
		<apex:pageBlock >
		<div style="font: bold 16px arial; padding-left: 30px"> <h2>Configure DocuSign for Salesforce in your SDO (Standard Demo Org)</h2></div>
			<br /> 
		<!-- Step 1: Link DocuSign Account --> 
		<apex:pageBlock rendered="{!IsAccountConfigured == false || AuthResponseRequestAccountError}" >
			<table class="headerTableStyle" >
				<tr>
					<td>
					<!-- Progress bar  -->	
					<div id="statusHeader">
						<table id="headerTable">
							<tr>
								<td>
									<!-- Create Account Header -->
									<div id="headerBlueStart"></div>
									<div id="headerBlueMiddle">
										<div id="headTextContainer">
											<b> Step 1: </b> <br />Link DocuSign Account
										</div>
									</div>
									
									<div id="headerCreateAccountTransition1" ></div>
									
									<div id="headerWhiteMiddle">
										<div id="headTextContainer">
											<b> Step 2: </b> <br />{!$Label.TrustedNetwork}
										</div>
									</div>
									
									<div id="whiteArrowTransition"></div>
									
									<div id="headerWhiteMiddle">
										<div id="headTextContainer">
											<b> Step 3: </b> <br />Connect to Salesforce
										</div>
									</div>
									
									<div id="whiteArrowTransition"></div>
									
									<div id="headerWhiteMiddle">
										<div id="headTextContainer">
											{!$Label.FinalSteps}
										</div>
									</div>
									
									<div id="headerWhiteEnd"></div>
								</td>
							</tr>
						</table>
					</div>
					 
					</td>
				</tr>
			</table>
		</apex:pageBlock>	
		
		<!-- Step 2: Trusted Network -->
		<apex:pageBlock rendered="{!(IsAccountConfigured == true) && (ConnectCredentialsEditable == true) && (AddDocusignAsTrusted == false) && (AuthResponseRequestAccountError == false)}" >
			<table class="headerTableStyle">
				<tr>
					<td>
					
					<!-- Progress bar  -->	
					<div id="statusHeader">
						<table id="headerTable">
							<tr>
								<td>
									<!-- Create Account Header -->
									<div id="headerWhiteStart"></div>
									<div id="headerWhiteMiddle">
										<div id="headTextContainer">
											<b> Step 1: </b> <br />Link DocuSign Account
										</div>
									</div>
									
									<div id="headerTrustNetworkTransition1" ></div>
									
									<div id="headerBlueMiddle">
										<div id="headTextContainer">
											<b> Step 2: </b> <br />{!$Label.TrustedNetwork}
										</div>
									</div>
									
									<div id="headerCreateAccountTransition1"></div>
									
									<div id="headerWhiteMiddle">
										<div id="headTextContainer">
											<b> Step 3: </b> <br />Connect to Salesforce
										</div>
									</div>
									
									<div id="whiteArrowTransition"></div>
									
									<div id="headerWhiteMiddle">
										<div id="headTextContainer">
											{!$Label.FinalSteps}
										</div>
									</div>
									
									<div id="headerWhiteEnd"></div>
								</td>
							</tr>
						</table>
					</div>
					 
					</td>
				</tr>
			</table>
		</apex:pageBlock>	
		
		
	<!-- Step 3: Connect to Salesforce -->
	 <apex:pageBlock rendered="{!(IsAccountConfigured == true) && (ConnectCredentialsEditable == true) && (AddDocusignAsTrusted == true)}" >	
		<table class="headerTableStyle">
				<tr>
					<td>
					
					<!-- Progress bar  -->	
					<div id="statusHeader">
						<table id="headerTable">
							<tr>
								<td>
									<!-- Create Account Header -->
									<div id="headerWhiteStart"></div>
									<div id="headerWhiteMiddle">
										<div id="headTextContainer">
											<b> Step 1: </b> <br />Link DocuSign Account
										</div>
									</div>
									
									<div id="whiteArrowTransition"></div> 
									
									<div id="headerWhiteMiddle">
										<div id="headTextContainer">
											<b> Step 2: </b> <br />{!$Label.TrustedNetwork}
										</div>
									</div>
									
									
									<div id="headerTrustNetworkTransition1" ></div>
									
									<div id="headerBlueMiddle">
									
										<div id="headTextContainer">
											<b> Step 3: </b> <br />Connect to Salesforce
										</div>
									</div>
									
									<div id="headerCreateAccountTransition1"></div>
									
									<div id="headerWhiteMiddle">
										<div id="headTextContainer">
											{!$Label.FinalSteps}
										</div>
									</div>
									
									<div id="headerWhiteEnd"></div>
								</td>
							</tr>
						</table>
					</div>
					 
					</td>
				</tr>
			</table>
		</apex:pageBlock>	
		
		 <!--  Final Steps -->
		 <apex:pageBlock rendered="{!(IsAccountConfigured == true) && (ConnectCredentialsEditable == false)}" >	
		 <table class="headerTableStyle">
				<tr>
					<td>
					
					<!-- Progress bar  -->	
					<div id="statusHeader">
						<table id="headerTable">
							<tr>
								<td>
									<!-- Create Account Header -->
									<div id="headerWhiteStart"></div>
									<div id="headerWhiteMiddle">
										<div id="headTextContainer">
											<b> Step 1: </b> <br />Link DocuSign Account
										</div>
									</div>
									
									<div id="whiteArrowTransition"></div>
									
									<div id="headerWhiteMiddle">
										<div id="headTextContainer">
											<b> Step 2: </b> <br />{!$Label.TrustedNetwork}
										</div>
									</div>
									
									
									<div id="whiteArrowTransition"></div>
									
									<div id="headerWhiteMiddle">
									
										<div id="headTextContainer">
											<b> Step 3: </b> <br />Connect to Salesforce
										</div>
									</div>
									
									<div id="headerWhiteEnd"></div>
									
									<div id="headerBlueMiddle">
										<div id="headTextContainer">
											{!$Label.FinalSteps}
										</div>
									</div>
									
									<div id="headerWhiteEnd"></div>
								</td>
							</tr>
						</table>
					</div>
					 
					</td>
				</tr>
			</table>
		</apex:pageBlock>
					
		<!-- Link or Sign in Docusign Demo  -->	
		<apex:outputPanel layout="block" styleClass="createAccountDivStyle"  rendered="{!(IsAccountConfigured == false) && (LEN(ConnectErrorMessage) < 1)}">
			<table class="subHeaderTextStyle" >
				<tr>
					<th colspan="0"> <apex:outputText styleClass="headerTextStyle"  escape="false" value="<b>{!$Label.Step1}:&nbsp;&nbsp;</b>{!$Label.LinkDSAccount}" /> </th>
				</tr>
				<tr>
					<td>
						<br /> <apex:outputLabel rendered="{!IsAccountConfigured==false}">
						This will attempt to link to a DocuSign account that matches your SalesForce name and email address. If a matching account isn't found, it will create one for you automatically. </apex:outputLabel>
					</td>
				</tr>
				<tr>
					<td style="padding-top: 20px"> 
						<apex:outputLabel rendered="{!IsAccountConfigured}"><b>Account Linked Successfully. </b><br /></apex:outputLabel>
						<apex:outputLabel rendered="{!IsAccountConfigured}"><br />Your DocuSign account was linked to this Salesforce Organization. Here are the login credentials for your reference. The information below allows you to log directly in to DocuSign if needed.<br /></apex:outputLabel>
				
						<apex:outputLabel rendered="{!IsAccountConfigured}">{!$Label.DSAccountConfig}. <br /></apex:outputLabel>
						<apex:outputLabel rendered="{!(IsAccountConfigured == true) && (dummyRecordForUserLookup.dsfs__DSProSFPassword__c == $User.Username)}"><br /> Name = {!$User.FirstName} {!$User.LastName} <br /> Email = {!dummyRecordForUserLookup.dsfs__DSProSFUsername__c} <br /> Password = {!dummyRecordForUserLookup.dsfs__DSProSFPassword__c}  </apex:outputLabel>
					
						<apex:commandButton action="{!RequestAccount}"  value="Try to Link to DocuSign" rendered="{!IsAccountConfigured==false}" styleClass="mainDocuSignButton" /> 
						<apex:outputLabel rendered="{!(IsAccountConfigured == false) && (LEN(ConnectErrorMessage) < 1)}"> ( Link Account: {!dummyRecordForUserLookup.dsfs__DSProSFUsername__c}.)  <br />  <br /> </apex:outputLabel>
						
					</td>
				</tr>
			</table>
		</apex:outputPanel>
		
		
		<!-- Link or Sign in Docusign Demo Options on Autolink fail -->	
		<apex:outputPanel layout="block" styleClass="createAccountDivStyle" rendered="{! (AuthResponseRequestAccountError || ((IsAccountConfigured == false) && (LEN(ConnectErrorMessage) > 1))) }"> 
			<table class="subHeaderTextStyle">
				<tr>
					<th colspan="0"> <apex:outputText styleClass="headerTextStyle"  escape="false" value="<b>{!$Label.Step1}:&nbsp;&nbsp;</b>Existing DocuSign Account Does Not Match" /> </th>
				</tr>
				<tr> 
				<apex:outputPanel rendered="{!EmalAndUserNameExists == false && EmalAndPasswordExists == false}">
					<td style="padding-top: 20px"> 
						<apex:outputLabel > We found a DocuSign account but the credentials did not fully match. The email matches, and the name matches, but the password does not. In order to proceed, please follow one of the options below:<br /></apex:outputLabel>
						<apex:outputLabel > <br /> <br /> <b> Option 1: Change Your Name in Salesforce </b> <br /></apex:outputLabel>
						<apex:outputLabel > <br /> DocuSign accounts are based on matching name and email address. If you change your name in your SalesForce account, this will allow the creation of a new DocuSign account. Once you've made that change, you can retry to link a DocuSign account again: <br /><br /></apex:outputLabel>
						<apex:commandButton action="{!RequestAccount}"  value="Try to Link to DocuSign" styleClass="mainDocuSignButton" /> 
					</td>
				</apex:outputPanel> 
				<apex:outputPanel rendered="{!EmalAndPasswordExists == true}">
					<td style="padding-top: 20px"> 
					    <apex:outputLabel > We found a DocuSign account but the credentials did not fully match. The email matches, and the password matches, but the full name does not. In order to proceed, please follow one of the options below:<br /></apex:outputLabel>	
						<apex:outputLabel > <br /> <b> Option 1: Change Your Name in Salesforce </b> <br /></apex:outputLabel>
						<apex:outputLabel > <br /> DocuSign accounts are based on matching name and email address. If you change your name in your SalesForce account, this will allow the creation of a new DocuSign account. Once you've made that change, you can retry to link a DocuSign account again: <br /><br /></apex:outputLabel>
						<apex:commandButton action="{!RequestAccount}"  value="Try to Link to DocuSign" styleClass="mainDocuSignButton" /> 
					</td>
				</apex:outputPanel> 
				</tr>
				<tr>
					<apex:outputPanel rendered="{!AuthResponseRequestAccountError == false}">
					<td>
					    <apex:outputLabel rendered="{!EmalAndUserNameExists == false}"><br /> <b> Option 2: Recover Your DocuSign Password </b> <br /></apex:outputLabel>
						<apex:outputLabel rendered="{!EmalAndUserNameExists == true}"><br /> <b> Option 1: Recover Your DocuSign Password </b> <br /></apex:outputLabel>			
						<apex:outputLabel ><br /> If you would like to use the existing account, you can reset the password on the account. Warning: This will break any link between that DocuSign account and an existing SDO. <br /><br /></apex:outputLabel>
						<apex:commandButton value="Reset DocuSign Password" action="http://demo.docusign.net/Member/MemberForgotPassword.aspx"  styleClass="mainDocuSignButton"> </apex:commandButton>
						<apex:outputLabel ><br /> <br />  Once you've reset your password in DocuSign, or if you know it now, enter it below: <br /> </apex:outputLabel>	
					</td>
					</apex:outputPanel> 
					
					<apex:outputPanel rendered="{!AuthResponseRequestAccountError && EmalAndUserNameExists}"> 
					<td>
						<apex:outputLabel > We found a DocuSign account but the credentials did not fully match. The email matches, and the name matches, but the password does not. In order to proceed, please follow one of the options below:<br /></apex:outputLabel>
						<apex:outputLabel ><br /> <b> Option 1: Recover Your DocuSign Password </b> <br /></apex:outputLabel>			
						<apex:outputLabel ><br /> If you would like to use the existing account, you can reset the password on the account. Warning: This will break any link between that DocuSign account and an existing SDO. <br /><br /></apex:outputLabel>
						<apex:commandButton value="Reset DocuSign Password" action="http://demo.docusign.net/Member/MemberForgotPassword.aspx"  styleClass="mainDocuSignButton"> </apex:commandButton>
						<apex:outputLabel ><br /> <br />  Once you've reset your password in DocuSign, or if you know it now, enter it below: <br /> </apex:outputLabel>	
					</td>
					</apex:outputPanel> 
				</tr>
				
				<tr>
					<td>
						<apex:outputLabel rendered="{!EmalAndUserNameExists == false  && EmalAndPasswordExists == false}" ><br /> <b> Option 3: Link to existing DS account:</b>  <br /><br /> </apex:outputLabel>	 
						<apex:outputLabel rendered="{!EmalAndUserNameExists == true || EmalAndPasswordExists == true}" ><br /> <b> Option 2: Link to existing DS account:</b>  <br /><br /> </apex:outputLabel>	
						<apex:outputLabel value="DocuSign Demo Email" style="width: 200px;" />
						&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
						<apex:inputField style="width: 200px;" value="{!dummyRecordForUserLookup.dsfs__DSProSFUsername__c}" id="TODOconnectUsernameEdit"/>
					</td>
					
				</tr>
				<tr>
					<td>
						<apex:outputLabel value="DocuSign Demo Password" style="width: 200px;"/>
						&nbsp;&nbsp;&nbsp;&nbsp;
						<apex:inputSecret value="{!dummyRecordForUserLookup.dsfs__DSProSFPassword__c}" id="TODOconnectPasswordEdit" style="width: 200px;"  />
					</td>
				</tr>
				
				<tr>
					<td style="padding-left: 160px;" >
					  <apex:commandButton action="{!RequestAccount}" value="Link Account" > 
					 	<apex:Param name="ConnectTwoDemo" assignTo="{!ConnectTwoDemo}" value="Welcome" /> 
					  </apex:commandButton>
					  <br/>
					  	<apex:outputText > &nbsp;
        				<apex:outputLink value="http://demo.docusign.net/Member/MemberForgotPassword.aspx">Forgot your password?
						</apex:outputLink> 
					  </apex:outputText>
					</td>
				</tr>
					
			</table>
		</apex:outputPanel>
			<br/>
			
					
			<!-- Add Docusign Demo as Trusted -->		
			<apex:outputPanel layout="block" styleClass="createAccountDivStyle" rendered="{!(IsAccountConfigured) && (ConnectCredentialsEditable) && (AddDocusignAsTrusted == false) && (AuthResponseRequestAccountError == false)}">
			<table class="subHeaderTextStyle">
				<tr>
					<th colspan="0">
					<apex:outputText styleClass="headerTextStyle" escape="false" value="<b>Step 2:&nbsp;&nbsp;</b> Add DocuSign as a Trusted Network" />
					</th>
				</tr>
			
				<tr>
					<td style="padding-top: 20px"><apex:outputLabel rendered="{!ConnectCredentialsEditable == false}"> Add DocuSign as a Trusted Network. <br/> </apex:outputLabel>
						<br />
						<apex:outputPanel rendered="{!ConnectCredentialsEditable}">
							<table cellpadding="0" cellspacing="0" border="0">
								<tr>
									<td align="center" style="white-space: nowrap;" valign="bottom">
										<input type="button" class="btn" onclick="SetTrustedNetwork()"
										id="btnTrustedNetwork"
										value="{!$Label.AddDSTrusted}" /> <br />{!$Label.ClosePopUpAfterComplete}
									</td>
								</tr>
								<tr>	
									<td></td><td style="padding-left: 10px; padding-right: 10px"><apex:outputText >Or</apex:outputText></td>
								</tr>
								<tr>	
									<td style="white-space: nowrap;" valign="top">{!$Label.SalesforceToken}
									&nbsp;
									<apex:inputSecret value="{!ConnectSecurityToken}" id="connectSecurityToken" style="width: 200px;" />
									<apex:outputText ><br /><br />Click Continue once you have completed this step.</apex:outputText>
									</td> 
								</tr>
							</table> <br /> <br />
		
							<!-- TODO: Define action and set state when button is clicked to move to next step.
							<apex:commandButton value="Continue »" action="DocuSignSetupDemoController.OnClickContinue">
								<apex:param name="cmd" assignTo="{!cmd}" value="addtrusted" />
  							</apex:commandButton>  -->	
							<apex:commandButton action="{!OnClickContinue}"  value="Continue »"  styleClass="mainDocuSignButton" id="cmdcontinue" /> 
							
						</apex:outputPanel></td>
				</tr>
				
				</table><br /> 
				</apex:outputPanel>
				<br/>
				
				<!-- Connect DocuSign to Salesforce  -->	
				<apex:outputPanel layout="block" styleClass="createAccountDivStyle"  rendered="{!(IsAccountConfigured) && (ConnectCredentialsEditable) && (AddDocusignAsTrusted == true)}">
				<table class="subHeaderTextStyle">
				<tr>
					<th colspan="0">
					<apex:outputText styleClass="headerTextStyle"  escape="false" value="<b>Step3:&nbsp;&nbsp;</b>Allow DocuSign to connect to Salesforce" />
					</th>
				</tr>	
				<tr>
					<td style="padding-top: 20px"><apex:outputLabel rendered="{!ConnectCredentialsEditable == false}"> {!$Label.DSToSFComplete}.<br /></apex:outputLabel>
						<apex:outputPanel rendered="{!ConnectCredentialsEditable}">
							<table cellpadding="0" cellspacing="0" border="0">
								<tr>
									<td style="padding-top: 20px" align="left"><apex:outputLabel value="{!$Label.SalesforceUser}" rendered="{!ConnectCredentialsEditable}" />
									</td>
									<td style="padding-top: 20px" ><apex:inputField style="width: 200px;"
										value="{!dummyRecordForUserLookup.dsfs__LookupUser__c}"
										id="connectUsernameEdit" rendered="{!ConnectCredentialsEditable}" />
									</td>
								</tr>
								<tr>
									<td style="white-space: nowrap;" align="left"><apex:outputLabel value="{!$Label.SalesforcePass}"
									rendered="{!ConnectCredentialsEditable}" /></td>
									<td style="white-space: nowrap;"><apex:inputSecret value="{!ConnectPassword}" id="connectPasswordEdit"
									style="width: 200px;" rendered="{!ConnectCredentialsEditable}" />
									</td>
								</tr>
								<tr>
									<td style="white-space: nowrap;" align="left"><apex:outputLabel value="{!$Label.SalesforceEnv}" for="sfEnv"
									rendered="{!ConnectCredentialsEditable}" />
									</td>
									<td style="white-space: nowrap;"><apex:selectList id="sfEnv"
										value="{!SalesforceEnvironmentForConnect}" multiselect="false" size="1" style="width: 200px;" rendered="{!ConnectCredentialsEditable}">
										<apex:selectOptions value="{!SalesforceEnvironmentForConnectList}" />
										</apex:selectList> <br />
											<apex:commandButton action="{!SaveConnect}"
								id="dsxConnectSave" value="{!$Label.Save}"
							rendered="{!ConnectCredentialsEditable}" /> <br /> 
							<apex:outputText value="{!ConnectErrorMessage}" id="connectErrorMessageDisplay"
							style="color: red" rendered="{!ConnectCredentialsEditable && IsAccountConfigured==false}" /></td>
						</tr>
						</table>
						<br/>
						<apex:commandButton action="{!OnClickprevious}"  value="Previous"  styleClass="mainDocuSignButton" /> 
				</apex:outputPanel></td>
				</tr>	
			</table><br /><br />
			</apex:outputPanel>
			
			
			<!-- Final Steps  -->	
			<table style="padding: 0px 0px 0px 30px;">
				<tr>
					<td><apex:outputPanel layout="block" styleClass="divStyle" rendered="{!(IsAccountConfigured == true) && (ConnectCredentialsEditable == false)}" >
							<table class="subHeaderTextStyle">
								<tr>
									<td><apex:outputText styleClass="headerTextStyle"
											value="{!$Label.AddDSButtonsToSF}" /></td>
								</tr>
							</table>
							<table class="addButtonsTableStyle">
								<tr>
									<td class="addButtonsCellStyle">{!$Label.Opportunity}</td> 
									<td class="addButtonsCellStyle">{!$Label.Account}</td>
									<td class="addButtonsCellStyle">{!$Label.Contact}</td>
									<td class="addButtonsCellStyle">{!$Label.Lead}</td>
									<td class="addButtonsCellStyle">{!$Label.Contract}</td>
								</tr>
								<tr>
									<td class="addButtonsCellStyle"><a
										onclick="OpenURL('AddButton', '/ui/setup/layout/PageLayouts?type=Opportunity&setupid=OpportunityLayouts', 'height=600, width=950,scrollbars=1,resizable=1')"
										class="mainDocuSignButton">{!$Label.AddButtons}</a></td>
									<td class="addButtonsCellStyle"><a
										onclick="OpenURL('AddButton', '/ui/setup/layout/PageLayouts?type=Account&setupid=AccountLayouts', 'height=600, width=950,scrollbars=1,resizable=1')"
										class="mainDocuSignButton">{!$Label.AddButtons}</a></td>
									<td class="addButtonsCellStyle"><a
										onclick="OpenURL('AddButton', '/ui/setup/layout/PageLayouts?type=Contact&setupid=ContactLayouts', 'height=600, width=950,scrollbars=1,resizable=1')"
										class="mainDocuSignButton">{!$Label.AddButtons}</a></td>
									<td class="addButtonsCellStyle"><a
										onclick="OpenURL('AddButton', '/ui/setup/layout/PageLayouts?type=Lead&setupid=LeadLayouts', 'height=600, width=950,scrollbars=1,resizable=1')"
										class="mainDocuSignButton">{!$Label.AddButtons}</a></td>
									<td class="addButtonsCellStyle"><a
										onclick="OpenURL('AddButton', '/ui/setup/layout/PageLayouts?type=Contract&setupid=ContractLayouts', 'height=600, width=950,scrollbars=1,resizable=1')"
										class="mainDocuSignButton">{!$Label.AddButtons}</a></td>
								</tr>
								
							</table>
						</apex:outputPanel></td>
				</tr>
				<tr>
					<td><br />
						&nbsp;<apex:commandButton action="{!Next}" value="{!$Label.Done}" rendered="{!ConnectCredentialsEditable ==false && IsAccountConfigured}"  />	
					</td>
				</tr>
			</table>
			<br />
		</apex:pageBlock>
	</apex:form>
</apex:page>